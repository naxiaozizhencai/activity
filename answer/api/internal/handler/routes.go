// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	activity "activity/answer/api/internal/handler/activity"
	login "activity/answer/api/internal/handler/login"
	"activity/answer/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/sendcode",
				Handler: login.SendCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: login.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/pageLog",
				Handler: login.PageLogHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/queryTarget",
				Handler: login.QueryTargetHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/activity/start",
				Handler: activity.ActivityStartHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/activity/rewards",
				Handler: activity.RewardsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/activity/fragmentRewards",
				Handler: activity.FragmentRewardsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/activity/answer",
				Handler: activity.AnswerHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/answer/list",
				Handler: activity.AnswerListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/logout",
				Handler: activity.LogoutHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
